from tkinter import *
from tkinter import Tk
from cryptography.fernet import Fernet


class Input:
    def __init__(self, input) -> None:
        self.buffer = input

    def getLen(self):
        return len(self.buffer)
    
    def __del__(self) -> None:
        return 0
    
class Enctrypton:
    def setMessage(self, message):
        self.message = message

    def generateKey(self):
        self.key = Fernet.generate_key()
        self.fernetObj = Fernet(self.key)
    
    def setKey(self, key):
        self.key = key
        self.fernetObj = Fernet(self.key)

    def getKey(self):
        return self.key
    
    def getKeyDecoded(self) -> str:
        return self.key.decode('utf-8')

    def decodeEncrypted(self) -> str:
        self.encryptedDecoded = self.encrypted.decode('utf-8')
        return self.encryptedDecoded
    
    def encryptCls(self):
        self.encrypted = self.fernetObj.encrypt(bytes(self.message, 'utf-8'))
        #return self.encrypted

    def decryptCls(self):
        self.decrypted = self.fernetObj.decrypt(self.message)
        #return self.decrypted

    def mixUp(self, keyDecoded, messageDecoded) -> str:
        slice1 = keyDecoded[0:11]
        slice2 = keyDecoded[11:22]
        slice3 = keyDecoded[22:33]
        slice4 = keyDecoded[33:44]
        return messageDecoded[0:11] + slice1 + messageDecoded[11:22] + slice2 + messageDecoded[22:33] + slice3 + messageDecoded[33:44] + slice4 + messageDecoded[44:]

    def unmixUp(self, received):
        key = received[11:22] + received[33:44] + received[55:66] + received[77:88]
        message = received[0:11] + received[22:33] + received[44:55] + received[66:77] + received[88:]
        key = bytes(key, 'utf-8')
        message = bytes(message, 'utf-8')
        self.setKey(key)
        self.setMessage(message)

    def __del__(self) -> None:
        return 0
#Tkinter handling 
# 
class windowHandling():

    def __init__(self, root) -> None:
        # self.root= tk.Tk()
        # self.root.mainloop()
        self.root = root
        self.canvas1 = root.Canvas(self.root, width=800, height=800, relief='raised')
        self.canvas1.grid()
        self.mainEncryptionObj = Enctrypton()


    def initScreen(self):
        self.label1 = root.Label(self.root, text='Choose what you want to do')
        self.label1.config(font=('helvetica', 20))
        self.canvas1.create_window(385, 70, window=self.label1)

        self.button1 = root.Button(text='Generate new key and encrypt', command=self.handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(170, 140, window=self.button1)

        self.button2 = root.Button(text='Input key and encrypt', command=self.handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(340, 140, window=self.button2)

        self.button3 = root.Button(text='Decrypt with key', command=self.handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(470, 140, window=self.button3)

        self.button4 = root.Button(text='Decrypt single message', command=self.handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(610, 140, window=self.button4)




    def handleNewKeyEncrypt(self):
        self.mainEncryptionObj.generateKey()

        self.label3 = root.Label(self.root, text='Generated key:',font=('helvetica', 20))
        self.label1.config(state=root.DISABLED)
        self.canvas1.create_window(385, 70, window=self.label3)
        self.entry1 = root.Text(self.root, wrap='word', width=60, height=2 ,font=('helvetica', 12)) 
        self.canvas1.create_window(385, 180, window=self.entry1)
        self.entry1.insert('1.0', self.mainEncryptionObj.getKeyDecoded())

        # self.button1.config(state=root.DISABLED)
        # self.button2.config(state=root.DISABLED)
        # self.button3.config(state=root.DISABLED)
        # self.button4.config(state=root.DISABLED)
        self.button1.grid_forget()
        self.button2.grid_forget()
        self.button3.grid_forget()
        self.button4.grid_forget()
        self.buttonGo = root.Button(text='Click to enter your message', command=lambda: [self.inputFromTextfield(), self.label3.destroy(), self.buttonGo.destroy()], bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(215, 140, window=self.buttonGo)
        # label3.destroy()
        # entry1.destroy()

    def inputFromTextfield(self):
        self.label3 = root.Label(root, text='Enter your message here:',font=('helvetica', 20))
        #buttonSubmit = root.Button(text='Submit', command=lambda: [displayEncryptedText(), label3.destroy()], bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        #canvas1.create_window(150, 140, window=buttonSubmit)
        self.canvas1.create_window(385, 70, window=self.label3)
        self.entry1 = root.Text(root, wrap='word', width=60, height=10 ,font=('helvetica', 12)) 
        self.canvas1.create_window(385, 180, window=self.entry1)
        msg = self.entry1.get(index1='1.0')
        self.mainEncryptionObj.setMessage(msg)
        self.entry1.config(state=NORMAL)
        self.entry1.delete('1.0', END)
        self.buttonSubmit = root.Button(text='Submit', command=lambda: [self.displayEncryptedText(), self.label3.destroy()], bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(150, 70, window=self.buttonSubmit)

    def displayEncryptedText(self):
        self.entry1 = root.Text(self.root, wrap='word', width=60, height=10 ,font=('helvetica', 12)) 
        self.canvas1.create_window(385, 180, window=self.entry1)
        self.mainEncryptionObj.encryptCls()
        self.entry1.insert('1.0', self.mainEncryptionObj.decodeEncrypted())
        self.buttonReturn = root.Button(text='Return to menu', command=self.returnToMenu, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
        self.canvas1.create_window(550, 70, window=self.buttonReturn)
    
    def returnToMenu(self):
        self.entry1.delete('1.0', END)
        self.buttonReturn.destroy()
        self.buttonSubmit.destroy()
        self.root.destroy()
        self.root= Tk()
        self.canvas1 = root.Canvas(self.root, width=800, height=800, relief='raised')
        self.canvas1.grid()    
        self.initScreen()

        
root= Tk()        
window = windowHandling(root)
window.initScreen()
root.mainloop()

# root= tk.Tk()
# #root.geometry("800x800")
# mainEncryptionObj = Enctrypton()

# canvas1 = tk.Canvas(root, width=800, height=800, relief='raised')
# canvas1.grid()

# label1 = tk.Label(root, text='Choose what you want to do')
# label1.config(font=('helvetica', 20))
# canvas1.create_window(385, 70, window=label1)

# button1 = tk.Button(text='Generate new key and encrypt', command=handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
# canvas1.create_window(170, 140, window=button1)

# button2 = tk.Button(text='Input key and encrypt', command=handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
# canvas1.create_window(340, 140, window=button2)

# button3 = tk.Button(text='Decrypt with key', command=handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
# canvas1.create_window(470, 140, window=button3)

# button4 = tk.Button(text='Decrypt single message', command=handleNewKeyEncrypt, bg='blue', fg='white', font=('helvetica', 9, 'bold'))
# canvas1.create_window(610, 140, window=button4)

# # label3 = tk.Label(root, text='Enter your key',font=('helvetica', 20))
# # canvas1.create_window(385, 70, window=label3)
# # entry1 = tk.Entry(root,width=40 ,font=('helvetica', 20)) 
# # canvas1.create_window(385, 140, window=entry1)

# def get_square_root():
#     x1 = entry1.get()
    
#     label3 = tk.Label(root, text='The Square Root of ' + x1 + ' is:', font=('helvetica', 10))
#     canvas1.create_window(200, 210, window=label3)
    
#     label4 = tk.Label(root, text=float(x1)**0.5, font=('helvetica', 10, 'bold'))
#     canvas1.create_window(200, 230, window=label4)
    
# #button1 = tk.Button(text='Get the Square Root', command=get_square_root, bg='brown', fg='white', font=('helvetica', 9, 'bold'))
# #canvas1.create_window(200, 180, window=button1)

# root.mainloop()